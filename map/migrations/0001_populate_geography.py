# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-03 18:54
from __future__ import unicode_literals

from django.contrib.gis.utils import LayerMapping
from django.conf import settings
from django.db import migrations, models
import django.contrib.gis.db.models.fields
import django.db.models.deletion
import os


def populate_geo(apps, schema_editor):
    State = apps.get_model('map', 'State')
    County = apps.get_model('map', 'County')

    state_mapping = LayerMapping(State, os.path.join(settings.BASE_DIR, 'geography/geodata/states/cb_2015_us_state_500k/cb_2015_us_state_500k.shp'), {'name': 'NAME', 'fips': 'STATEFP', 'geom': 'MULTIPOLYGON'})
    state_mapping.save(verbose=True)

    county_mapping = LayerMapping(County, os.path.join(settings.BASE_DIR, 'geography/geodata/counties/cb_2015_us_county_500k/cb_2015_us_county_500k.shp'), {'name': 'NAME', 'fips': 'COUNTYFP', 'state': {'fips': 'STATEFP'}, 'geom': 'MULTIPOLYGON'})
    county_mapping.save(verbose=True)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('limited_ice_cooperation', models.CharField(blank=True, choices=[('yes-by-law', 'Yes, by law'), ('yes-in-practice', 'Yes, in practice (informal)'), ('unlimited', 'Mark if there is unlimited ICE cooperation'), (None, 'Information N/A')], max_length=128, null=True)),
                ('limited_ice_cooperation_short_answer', models.TextField(blank=True, null=True)),
                ('jails_honor_ice_detainers', models.NullBooleanField()),
                ('jails_honor_ice_detainers_short_answer', models.TextField(blank=True, null=True)),
                ('participate_287g_program', models.NullBooleanField()),
                ('participate_287g_program_short_answer', models.TextField(blank=True, null=True)),
                ('provide_legal_representation', models.NullBooleanField()),
                ('provide_legal_representation_short_answer', models.TextField(blank=True, null=True)),
                ('city_services', models.NullBooleanField()),
                ('city_services_short_answer', models.TextField(blank=True, null=True)),
                ('separate_form_of_id', models.NullBooleanField()),
                ('separate_form_of_id_short_answer', models.TextField(blank=True, null=True)),
                ('office_civic_engagement_immigrant_affairs', models.NullBooleanField()),
                ('office_civic_engagement_immigrant_affairs_short_answer', models.TextField(blank=True, null=True)),
                ('other_policies_and_services', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('fips', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('fips', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='county',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.State'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.State'),
        ),
        migrations.RunPython(populate_geo, reverse_code=migrations.RunPython.noop)
    ]
